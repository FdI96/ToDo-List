(()=>{"use strict";class t{constructor(t,e,n,i,r){if(this.title=t,this.description=e,this.date=n,this.priority=i,r)this.id=r;else{let t=localStorage.getItem("accToDo");t=Number(t),t+=1,this.id=t,localStorage.setItem("accToDo",t)}}removeElement(){const t=JSON.parse(localStorage.getItem("Default")),e=JSON.parse(localStorage.getItem("currentArray"));localStorage.setItem("currentArray",JSON.stringify(e));const n=t=>t.id===this.id,i=t.findIndex(n),r=e.findIndex(n);t.splice(i,1),localStorage.setItem("Default",JSON.stringify(t)),e.splice(r,1);const l=localStorage.getItem("currentProject");localStorage.setItem(l,JSON.stringify(e)),localStorage.setItem("currentArray",JSON.stringify(e));const o=document.getElementById(`${this.id}`);document.getElementById("toDoListShow").removeChild(o)}editElement(){let e=document.getElementById(`${this.id}`);const n=document.createElement("form");e.appendChild(n);const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id",`inputTitleEdit${this.id}`);const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id",`inputDescriptionEdit${this.id}`);const l=document.createElement("input");l.setAttribute("type","date"),l.setAttribute("id",`inputDateEdit${this.id}`);const o=document.createElement("div");o.setAttribute("id",`inputPriorityEdit${this.id}`);let c,d=document.createElement("label");d.innerHTML="Priority:",d.setAttribute("for","priority"),o.appendChild(d);for(let t=0;t<3;t+=1){let e=document.createElement("input");switch(t){case 0:c="low";break;case 1:c="medium";break;case 2:c="urgent"}d=document.createElement("label"),d.setAttribute("for",c),d.innerHTML=c,o.appendChild(d),e.setAttribute("type","radio"),e.setAttribute("name",c),e.setAttribute("id",`${c}${this.id}`),o.appendChild(e)}n.appendChild(i),n.appendChild(r),n.appendChild(l),n.appendChild(o);const a=document.createElement("button");a.setAttribute("type","submit"),a.setAttribute("id","editButtonAccept"),a.innerHTML="Accept",n.appendChild(a),a.addEventListener("click",(()=>{let e=document.getElementById(`inputTitleEdit${this.id}`),n=document.getElementById(`inputDescriptionEdit${this.id}`),i=document.getElementById(`inputDateEdit${this.id}`);const r=document.getElementById(`low${this.id}`),l=document.getElementById(`medium${this.id}`),o=document.getElementById(`urgent${this.id}`);c=null,c=r.checked?r.name:l.checked?l.name:o.name;let d=new t(e.value,n.value,i.value,c,this.id),a=JSON.parse(localStorage.getItem("Default")),s=a.findIndex((t=>t.id==this.id));a[s]=d,localStorage.setItem("Default",JSON.stringify(a));let u=localStorage.getItem("currentProject"),m=JSON.parse(localStorage.getItem(`${u}`));s=m.findIndex((t=>t.id==this.id)),m[s]=d,localStorage.setItem(`${u}`,JSON.stringify(m)),localStorage.setItem("currentArray",JSON.stringify(m))}))}print(){const t=document.createElement("div");let e=null;e="low"===this.priority?"primary":"medium"===this.priority?"warning":"danger",t.setAttribute("class",`card text-white bg-${e}`),t.setAttribute("id",`${this.id}`);const n=document.createElement("div");n.setAttribute("id","cardTitle"),n.setAttribute("class","card-header text-white"),n.innerHTML=this.title,t.appendChild(n);const i=document.createElement("div");i.setAttribute("class","card-body text-white"),i.setAttribute("id","body"),t.appendChild(i);const r=document.createElement("h5");r.setAttribute("id",`description${this.id}`),r.setAttribute("class","card-title text-white"),r.innerHTML=this.description,i.appendChild(r);let l=document.createElement("p");l.setAttribute("class","card-text text-white"),l.setAttribute("id","dateToDo"),l.innerHTML=this.date,i.appendChild(l),l=document.createElement("p"),l.setAttribute("class","card-text text-white"),l.setAttribute("id","priorityToDo"),l.innerHTML=this.priority,i.appendChild(l);const o=document.createElement("div");o.setAttribute("class","row container"),t.appendChild(o);const c=document.createElement("button");c.setAttribute("id","deleteButton"),c.setAttribute("class","col-2"),c.innerHTML="Delete",o.appendChild(c),c.addEventListener("click",(()=>this.removeElement()));const d=document.createElement("button");return d.setAttribute("id","editButton"),d.setAttribute("class","col-2"),d.innerHTML="Edit",o.appendChild(d),d.addEventListener("click",(()=>this.editElement())),t}}const e=t;let n=JSON.parse(localStorage.getItem("projectsArray"));n=n||["Default"],localStorage.setItem("projectsArray",JSON.stringify(n));let i=localStorage.getItem("currentProject");i??=localStorage.setItem("currentProject","Default");let r=JSON.parse(localStorage.getItem(`${i}`));null!==r&&r!==[]||(r=[]),localStorage.setItem("currentArray",JSON.stringify(r));let l=JSON.parse(localStorage.getItem("allToDosArray"));l??=[],localStorage.setItem("allToDosArray",JSON.stringify(l)),null==localStorage.getItem("accToDo")&&localStorage.setItem("accToDo",0);let o=localStorage.getItem("currentProject");o??=localStorage.setItem("currentProject","Default"),null==JSON.parse(localStorage.getItem("Default"))&&localStorage.setItem("Default",JSON.stringify([]));let c=JSON.parse(localStorage.getItem(`${o}`));null!==c&&c!==[]||(c=[]),localStorage.setItem("currentArray",JSON.stringify(c));const d=document.getElementById("content"),a=document.createElement("div");a.setAttribute("class","col-4"),a.setAttribute("id","projectList"),d.appendChild(a);const s=document.createElement("div");s.setAttribute("class","col-8"),s.setAttribute("id","toDoList"),d.appendChild(s);const u=(()=>{const t=document.getElementById("projectList"),l=document.createElement("div");l.setAttribute("class","row");const o=document.createElement("h1");o.setAttribute("class","col-8"),o.innerHTML="Projects",l.appendChild(o);const c=(()=>{const t=document.createElement("form");t.setAttribute("id","idForm");const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("placeholder","Project name"),e.setAttribute("id","nameField"),t.appendChild(e);const n=document.createElement("span");n.setAttribute("class","col-4");const i=document.createElement("button");return i.setAttribute("type","submit"),i.setAttribute("id","buttonSubmit"),i.innerHTML="Add project",n.appendChild(i),t.appendChild(n),t})();l.appendChild(c);const d=document.createElement("ul");for(let t=0;t<n.length;t+=1){const l=document.createElement("li"),o=document.createElement("button");o.innerHTML=n[t],o.addEventListener("click",(t=>{localStorage.setItem("currentProject",t.target.innerHTML);const n=t.target.innerHTML,i=localStorage.getItem(n),r=JSON.parse(`${i}`);localStorage.setItem("currentArray",JSON.stringify(r));const l=document.getElementById("toDoListShow");l.innerHTML=null;const o="Default"===localStorage.getItem("currentProject")?JSON.parse(localStorage.getItem("Default")):JSON.parse(localStorage.getItem("currentArray"));for(let t=0;t<o.length;t+=1){const n=new e(o[t].title,o[t].description,o[t].date,o[t].priority,o[t].id);if(n.id){const t=n.print();l.appendChild(t),document.getElementById("toDoList").appendChild(l)}}})),l.appendChild(o),d.appendChild(l),r=JSON.parse(localStorage.getItem(i))}return t.appendChild(l),t.appendChild(d),c.children[1].children[0].addEventListener("click",(()=>{n.push(c.children[0].value);const t=document.createElement("li"),i=document.createElement("button");i.innerHTML=c.children[0].value,i.addEventListener("click",(t=>{localStorage.setItem("currentProject",t.target.innerHTML);const n=localStorage.getItem("currentProject");r=JSON.parse(localStorage.getItem(n)),localStorage.setItem("currentArray",JSON.stringify(r)),document.getElementById("toDoListShow").innerHTML=null;for(let t=0;t<r.length;t+=1){const n=new e(r[t].title,r[t].description,r[t].date,r[t].priority,r[t].id);if(n.id){const t=n.print();document.getElementById("toDoListShow").appendChild(t)}}})),localStorage.setItem("currentProject",c.children[0].value);const l=c.children[0].value;localStorage.setItem(`${l}`,JSON.stringify([])),localStorage.setItem("currentArray",JSON.stringify([])),document.getElementById("toDoListShow").innerHTML=null,t.appendChild(i),d.appendChild(t),localStorage.setItem("projectsArray",JSON.stringify(n))})),t})();d.appendChild(u);const m=(()=>{const t=document.getElementById("toDoList"),n=document.createElement("h2");n.setAttribute("class","text-center"),n.innerHTML="List of ToDo",t.appendChild(n);const i=document.createElement("div");i.setAttribute("class","toDoListBlock"),i.appendChild((()=>{const t=document.createElement("form"),e=document.createElement("div");t.appendChild(e);let n=document.createElement("label");n.setAttribute("for","title"),n.innerHTML="Title:",e.appendChild(n);let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","title"),i.setAttribute("id","title"),e.appendChild(i);const r=document.createElement("div");t.appendChild(r),n=document.createElement("label"),n.innerHTML="Description:",n.setAttribute("for","description"),r.appendChild(n),i=document.createElement("input"),i.setAttribute("type","text"),i.setAttribute("name","description"),i.setAttribute("id","description"),r.appendChild(i);const l=document.createElement("div");t.appendChild(l),n=document.createElement("label"),n.innerHTML="Due Date: ",n.setAttribute("for","dueDate"),l.appendChild(n),i=document.createElement("input"),i.setAttribute("type","date"),i.setAttribute("name","dueDate"),i.setAttribute("id","dueDate"),l.appendChild(i);const o=document.createElement("div");t.appendChild(o),n=document.createElement("label"),n.innerHTML="Priority:",n.setAttribute("for","priority"),o.appendChild(n);for(let t=0;t<3;t+=1){let e;switch(i=document.createElement("input"),t){case 0:e="low";break;case 1:e="medium";break;case 2:e="urgent"}n=document.createElement("label"),n.setAttribute("for",e),n.innerHTML=e,o.appendChild(n),i.setAttribute("type","radio"),i.setAttribute("name",e),i.setAttribute("id",e),o.appendChild(i)}const c=document.createElement("input");return t.appendChild(c),c.setAttribute("type","submit"),c.setAttribute("id","submitButton"),t})()),t.appendChild(i);const r=document.createElement("div");r.setAttribute("id","toDoListShow"),t.appendChild(r);const l=localStorage.getItem("currentProject"),o="Default"===l?JSON.parse(localStorage.getItem("Default")):JSON.parse(localStorage.getItem(`${l}`));for(let t=0;t<o.length;t+=1){const n=new e(o[t].title,o[t].description,o[t].date,o[t].priority,o[t].id);if(n.id){const t=n.print();r.appendChild(t)}}return t})();d.appendChild(m),document.getElementById("submitButton").addEventListener("click",(()=>{const t=document.getElementById("title").value,n=document.getElementById("description").value,i=document.getElementById("dueDate").value,r=(()=>{const t=document.getElementById("low"),e=document.getElementById("medium"),n=document.getElementById("urgent");let i=null;return i=t.checked?t.name:e.checked?e.name:n.name,i})(),d=new e(t,n,i,r),a=document.getElementById("toDoListShow");a.appendChild(d.print()),l.push(d),c=JSON.parse(localStorage.getItem("currentArray")),localStorage.setItem("Default",JSON.stringify(l)),c.push(d),o=localStorage.getItem("currentProject"),localStorage.setItem("currentArray",JSON.stringify(c)),localStorage.setItem(`${o}`,JSON.stringify(c)),localStorage.setItem("allToDosArray",JSON.stringify(l)),m.appendChild(a)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,