(()=>{"use strict";const e=window.localStorage;let t=JSON.parse(e.getItem("projectsArray"));t=t||["Default"];class r{constructor(e,t,r,n){this.title=e,this.description=t,this.date=r,this.priority=n}print(){let e=document.createElement("div"),t=null;t="low"==this.priority?"primary":"medium"==this.priority?"warning":"danger",e.setAttribute("class",`card text-white bg-${t}`);let r=document.createElement("div");r.setAttribute("class","card-header text-white"),r.innerHTML=this.title,e.appendChild(r);let n=document.createElement("div");n.setAttribute("class","card-body text-white"),e.appendChild(n);let l=document.createElement("h5");l.setAttribute("class","card-title text-white"),l.innerHTML=this.description,n.appendChild(l);let o=document.createElement("p");return o.setAttribute("class","card-text text-white"),o.innerHTML=this.date,n.appendChild(o),o=document.createElement("p"),o.setAttribute("class","card-text text-white"),o.innerHTML=this.priority,n.appendChild(o),e}}let n=localStorage.getItem("currentProject");n??=localStorage.setItem("currentProject","Default");let l=JSON.parse(localStorage.getItem("allToDosArray"));l??=[];let o=JSON.parse(localStorage.getItem("projectsArray"));o??=[];let i=JSON.parse(localStorage.getItem("Default"));i??=[];let a=JSON.parse(localStorage.getItem("allToDosArray"));a??=[];let c=localStorage.getItem("currentProject");c??=localStorage.setItem("currentProject","Default"),null==JSON.parse(localStorage.getItem("Default"))&&localStorage.setItem("Default","[]");let d=JSON.parse(localStorage.getItem("Default"));d??=[],localStorage.setItem("currentArray",JSON.stringify(d));const s=document.getElementById("content"),u=document.createElement("div");console.log(s),u.setAttribute("class","col-4"),u.setAttribute("id","projectList"),s.appendChild(u),console.log(u);const m=document.createElement("div");m.setAttribute("class","col-8"),m.setAttribute("id","toDoList"),s.appendChild(m);let p=(()=>{const e=document.getElementById("projectList");console.log(e);const o=document.createElement("div");o.setAttribute("class","row");const a=document.createElement("h1");a.setAttribute("class","col-8"),a.innerHTML="Projects",o.appendChild(a);const c=(()=>{const e=document.createElement("form");e.setAttribute("id","idForm");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("placeholder","Project name"),t.setAttribute("id","nameField"),e.appendChild(t);const r=document.createElement("span");r.setAttribute("class","col-4");const n=document.createElement("button");return n.setAttribute("type","submit"),n.setAttribute("id","buttonSubmit"),n.innerHTML="Add project",r.appendChild(n),e.appendChild(r),e})();o.appendChild(c);const d=document.createElement("ul");for(let e=0;e<t.length;e++){let o=document.createElement("li"),a=document.createElement("button");a.innerHTML=t[e],a.addEventListener("click",(e=>{localStorage.setItem("currentProject",e.target.innerHTML),i=JSON.parse(localStorage.getItem(e.target.innerHTML)),console.log(i),localStorage.setItem("currentArray",JSON.stringify(i));let t=document.getElementById("toDoListShow");console.log(t),t.innerHTML=null;const n="Default"==localStorage.getItem("currentProject")?l:JSON.parse(localStorage.getItem("currentArray"));console.log("array Auxiliar",n);for(let e=0;e<n.length;e++){let l=new r(n[e].title,n[e].description,n[e].date,n[e].priority);if(console.log("card,",l),l.title){let e=l.print();t.appendChild(e),toDoList.appendChild(t)}}})),o.appendChild(a),d.appendChild(o),i=JSON.parse(localStorage.getItem(n))}return e.appendChild(o),e.appendChild(d),console.log("here",c.children[1].children[0]),c.children[1].children[0].addEventListener("click",(e=>{t.push(c.children[0].value);let r=document.createElement("li"),n=document.createElement("button");n.innerHTML=c.children[0].value,n.addEventListener("click",(e=>{localStorage.setItem("currentProject",e.target.innerHTML);let t=localStorage.getItem("currentProject");i=JSON.parse(localStorage.getItem(t)),localStorage.setItem("currentArray",JSON.stringify(i))})),console.log(c.children[0].value),localStorage.setItem("currentProject",c.children[0].value);let l=c.children[0].value;localStorage.setItem(`${l}`,JSON.stringify([])),localStorage.setItem("currentArray","[]"),document.getElementById("toDoListShow").innerHTML=null,r.appendChild(n),d.appendChild(r),localStorage.setItem("projectsArray",JSON.stringify(t))})),e})();s.appendChild(p);const g=(()=>{const e=document.getElementById("toDoList"),t=document.createElement("h2");t.setAttribute("class","text-center"),t.innerHTML="List of ToDo",e.appendChild(t);const n=document.createElement("div");n.setAttribute("class","toDoListBlock"),n.appendChild((()=>{const e=document.createElement("form"),t=document.createElement("div");e.appendChild(t);let r=document.createElement("label");r.setAttribute("for","title"),r.innerHTML="Title:",t.appendChild(r);let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("id","title"),t.appendChild(n);const l=document.createElement("div");e.appendChild(l),r=document.createElement("label"),r.innerHTML="Description:",r.setAttribute("for","description"),l.appendChild(r),n=document.createElement("input"),n.setAttribute("type","text"),n.setAttribute("name","description"),n.setAttribute("id","description"),l.appendChild(n);const o=document.createElement("div");e.appendChild(o),r=document.createElement("label"),r.innerHTML="Due Date: ",r.setAttribute("for","dueDate"),o.appendChild(r),n=document.createElement("input"),n.setAttribute("type","date"),n.setAttribute("name","dueDate"),n.setAttribute("id","dueDate"),o.appendChild(n);const i=document.createElement("div");e.appendChild(i),r=document.createElement("label"),r.innerHTML="Priority:",r.setAttribute("for","priority"),i.appendChild(r);for(let e=0;e<3;e++){let t;switch(n=document.createElement("input"),e){case 0:t="low";break;case 1:t="medium";break;case 2:t="urgent"}r=document.createElement("label"),r.setAttribute("for",t),r.innerHTML=t,i.appendChild(r),n.setAttribute("type","radio"),n.setAttribute("name",t),n.setAttribute("id",t),i.appendChild(n)}const a=document.createElement("input");return e.appendChild(a),a.setAttribute("type","submit"),a.setAttribute("id","submitButton"),e})()),e.appendChild(n);const l=document.createElement("div");l.setAttribute("id","toDoListShow"),e.appendChild(l);let o=localStorage.getItem("currentProject");const i="Default"==o?a:JSON.parse(localStorage.getItem(o));console.log("array Auxiliar",i);for(let e=0;e<i.length;e++){const t=new r(i[e].title,i[e].description,i[e].date,i[e].priority);if(t.title){let e=t.print();l.appendChild(e)}}return e})();s.appendChild(g),document.getElementById("submitButton").addEventListener("click",(e=>{e.preventDefault();let t=document.getElementById("title").value,n=document.getElementById("description").value,l=document.getElementById("dueDate").value,o=(()=>{let e=document.getElementById("low"),t=document.getElementById("medium"),r=document.getElementById("urgent"),n=null;return n=e.checked?e.name:t.checked?t.name:r.name,n})(),i=new r(t,n,l,o);toDoListShow.appendChild(i.print()),a.push(i),d=JSON.parse(localStorage.getItem("currentArray")),localStorage.setItem("Default",JSON.stringify(a)),d.push(i),c=localStorage.getItem("currentProject"),localStorage.setItem("currentArray",JSON.stringify(d)),localStorage.setItem(`${c}`,JSON.stringify(d)),localStorage.setItem("allToDosArray",JSON.stringify(a)),g.appendChild(toDoListShow)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYWRkQnV0dG9uLmpzIiwid2VicGFjazovLy8uL3NyYy90b0RvLmpzIiwid2VicGFjazovLy8uL3NyYy9wcm9qZWN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdG9Eb0NvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbIm15U3RvcmFnZSIsIndpbmRvdyIsImxvY2FsU3RvcmFnZSIsInByb2plY3RzIiwiSlNPTiIsInBhcnNlIiwiZ2V0SXRlbSIsIlRvRG8iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZGF0ZSIsInByaW9yaXR5IiwidGhpcyIsImNhcmQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjb2xvciIsInNldEF0dHJpYnV0ZSIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwiYm9keSIsImJvZHlUaXRsZSIsImJvZHlQIiwiY3VycmVudFByb2plY3QiLCJzZXRJdGVtIiwiYWxsVG9Eb3MiLCJwcm9qZWN0c0FycmF5IiwiY3VycmVudEFycmF5Iiwic3RyaW5naWZ5IiwiY29udGVudCIsImdldEVsZW1lbnRCeUlkIiwicHRMaXN0IiwiY29uc29sZSIsImxvZyIsInRvTGlzdCIsInByb2plY3RMaXN0IiwiZGl2UHJvamVjdHNCdXR0b24iLCJmb3JtIiwiaW5wdXROYW1lIiwic3BhbkFkZEJ1dHRvbiIsImFkZEJ1dHRvbiIsImFkZEJ1dHRvbkNvbXBvbmVudCIsInVMaXN0IiwiaW5kZXgiLCJsZW5ndGgiLCJsaSIsImJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwidGFyZ2V0IiwibGlzdCIsImFycmF5QXV4IiwicmVuZGVyQ2FyZCIsInByaW50IiwidG9Eb0xpc3QiLCJjaGlsZHJlbiIsInB1c2giLCJ2YWx1ZSIsIml0ZW0iLCJrZXkiLCJwcm9qZWN0TGlzdENvbXBvbmVudCIsInRvRG9MaXN0QmxvY2siLCJpbnB1dFRpdGxlTkxhYmVsIiwibGFiZWwiLCJpbnB1dCIsImlucHV0RGVzY3JpcHRpb25OTGFiZWwiLCJpbnB1dER1ZURhdGVOTGFiZWwiLCJpbnB1dFByaW9yaXR5TkxhYmVsIiwic3VtYml0QnV0dG9uIiwidG9Eb0xpc3RTaG93IiwidG9Eb0NvbGxlY3Rpb24iLCJwcmV2ZW50RGVmYXVsdCIsImRlc2MiLCJwcmlvciIsInByaW9yaXR5TG93IiwicHJpb3JpdHlNZWRpdW0iLCJwcmlvcml0eVVyZ2VudCIsImNoZWNrZWQiLCJuYW1lIiwiZ2V0UHJpb3JpdHkiLCJ0b0RvIl0sIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBWUMsT0FBT0MsYUFDekIsSUFBSUMsRUFBV0MsS0FBS0MsTUFBTUwsRUFBVU0sUUFBUSxrQkFDNUNILEVBQVlBLEdBQVcsQ0FBQyxXQ0Z4QixNQUFNSSxFQUNKLFlBQVlDLEVBQU9DLEVBQWFDLEVBQU1DLEdBQ3BDQyxLQUFLSixNQUFRQSxFQUNiSSxLQUFLSCxZQUFjQSxFQUNuQkcsS0FBS0YsS0FBT0EsRUFDWkUsS0FBS0QsU0FBV0EsRUFHbEIsUUFDRSxJQUFJRSxFQUFPQyxTQUFTQyxjQUFjLE9BQzlCQyxFQUFRLEtBRVZBLEVBRG1CLE9BQWpCSixLQUFLRCxTQUNDLFVBQ2tCLFVBQWpCQyxLQUFLRCxTQUNOLFVBRUEsU0FFVkUsRUFBS0ksYUFBYSxRQUFTLHNCQUFzQkQsS0FFakQsSUFBSVIsRUFBUU0sU0FBU0MsY0FBYyxPQUNuQ1AsRUFBTVMsYUFBYSxRQUFTLDBCQUM1QlQsRUFBTVUsVUFBWU4sS0FBS0osTUFDdkJLLEVBQUtNLFlBQVlYLEdBRWpCLElBQUlZLEVBQU9OLFNBQVNDLGNBQWMsT0FDbENLLEVBQUtILGFBQWEsUUFBUyx3QkFDM0JKLEVBQUtNLFlBQVlDLEdBRWpCLElBQUlDLEVBQVlQLFNBQVNDLGNBQWMsTUFDdkNNLEVBQVVKLGFBQWEsUUFBUyx5QkFDaENJLEVBQVVILFVBQVlOLEtBQUtILFlBQzNCVyxFQUFLRCxZQUFZRSxHQUVqQixJQUFJQyxFQUFRUixTQUFTQyxjQUFjLEtBVW5DLE9BVEFPLEVBQU1M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aUMsSUFJN0IsT0FBT0UsR0NoR1FnQixHQUNqQnpDLEVBQVFWLFlBQVksR0FnQ0NMLFNBQVNnQixlQUFlLGdCQUNoQ2lCLGlCQUFpQixTQUFVQyxJQUN0Q0EsRUFBRXVCLGlCQUNGLElBQUkvRCxFQWhDUU0sU0FBU2dCLGVBQWUsU0FDdkIyQixNQWdDVGUsRUE1QmMxRCxTQUFTZ0IsZUFBZSxlQUN2QjJCLE1BNEJmL0MsRUF4Qk9JLFNBQVNnQixlQUFlLFdBQ3ZCMkIsTUF3QlJnQixFQXJCYyxNQUNsQixJQUFJQyxFQUFjNUQsU0FBU2dCLGVBQWUsT0FDdEM2QyxFQUFpQjdELFNBQVNnQixlQUFlLFVBQ3pDOEMsRUFBaUI5RCxTQUFTZ0IsZUFBZSxVQUN6Q25CLEVBQVcsS0FRZixPQU5FQSxFQURFK0QsRUFBWUcsUUFDSEgsRUFBWUksS0FDZEgsRUFBZUUsUUFDYkYsRUFBZUcsS0FFZkYsRUFBZUUsS0FFckJuRSxHQVNLb0UsR0FFUkMsRUFBTyxJQUFJekUsRUFBS0MsRUFBT2dFLEVBQU05RCxFQUFNK0QsR0FDdkNKLGFBQWFsRCxZQUFZNkQsRUFBSzNCLFNBQzlCLE9BQWMyQixHQUNkLEVBQWU1RSxLQUFLQyxNQUFNSCxhQUFhSSxRQUFRLGlCQUMvQ0osYUFBYXNCLFFBQVEsVUFBV3BCLEtBQUt3QixVQUFVLElBQy9DLEVBQWE0QixLQUFLd0IsR0FDbEIsRUFBaUI5RSxhQUFhSSxRQUFRLGtCQUN0Q0osYUFBYXNCLFFBQVEsZUFBZ0JwQixLQUFLd0IsVUFBVSxJQUNwRDFCLGFBQWFzQixRQUFRLEdBQUcsSUFBa0JwQixLQUFLd0IsVUFBVSxJQUN6RDFCLGFBQWFzQixRQUFRLGdCQUFpQnBCLEtBQUt3QixVQUFVLElBQ3JELEVBQVNULFlBQVlrRCxrQiIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbXlTdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZTtcclxubGV0IHByb2plY3RzID0gSlNPTi5wYXJzZShteVN0b3JhZ2UuZ2V0SXRlbShcInByb2plY3RzQXJyYXlcIikpO1xyXG5wcm9qZWN0cyA9ICFwcm9qZWN0cyA/IFtcIkRlZmF1bHRcIl0gOiBwcm9qZWN0cztcclxuXHJcbmNvbnN0IGFkZEJ1dHRvbkNvbXBvbmVudCA9ICgpID0+IHtcclxuICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XHJcbiAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImlkRm9ybVwiKTtcclxuICBjb25zdCBpbnB1dE5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgaW5wdXROYW1lLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xyXG4gIGlucHV0TmFtZS5zZXRBdHRyaWJ1dGUoXCJwbGFjZWhvbGRlclwiLCBcIlByb2plY3QgbmFtZVwiKTtcclxuICBpbnB1dE5hbWUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJuYW1lRmllbGRcIik7XHJcbiAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dE5hbWUpO1xyXG4gIGNvbnN0IHNwYW5BZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBzcGFuQWRkQnV0dG9uLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiY29sLTRcIik7XHJcbiAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInN1Ym1pdFwiKTtcclxuICBhZGRCdXR0b24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJidXR0b25TdWJtaXRcIik7XHJcbiAgYWRkQnV0dG9uLmlubmVySFRNTCA9IFwiQWRkIHByb2plY3RcIjtcclxuXHJcbiAgc3BhbkFkZEJ1dHRvbi5hcHBlbmRDaGlsZChhZGRCdXR0b24pO1xyXG4gIGZvcm0uYXBwZW5kQ2hpbGQoc3BhbkFkZEJ1dHRvbik7XHJcblxyXG4gIHJldHVybiBmb3JtO1xyXG59O1xyXG5cclxuZXhwb3J0IHsgcHJvamVjdHMsIGFkZEJ1dHRvbkNvbXBvbmVudCB9O1xyXG4iLCJjbGFzcyBUb0RvIHtcclxuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGRhdGUsIHByaW9yaXR5KSB7XHJcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICB0aGlzLmRhdGUgPSBkYXRlO1xyXG4gICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xyXG4gIH1cclxuXHJcbiAgcHJpbnQoKSB7XHJcbiAgICBsZXQgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBsZXQgY29sb3IgPSBudWxsO1xyXG4gICAgaWYgKHRoaXMucHJpb3JpdHkgPT0gXCJsb3dcIikge1xyXG4gICAgICBjb2xvciA9IFwicHJpbWFyeVwiO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLnByaW9yaXR5ID09IFwibWVkaXVtXCIpIHtcclxuICAgICAgY29sb3IgPSBcIndhcm5pbmdcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbG9yID0gXCJkYW5nZXJcIjtcclxuICAgIH1cclxuICAgIGNhcmQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgYGNhcmQgdGV4dC13aGl0ZSBiZy0ke2NvbG9yfWApO1xyXG5cclxuICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNhcmQtaGVhZGVyIHRleHQtd2hpdGVcIik7XHJcbiAgICB0aXRsZS5pbm5lckhUTUwgPSB0aGlzLnRpdGxlO1xyXG4gICAgY2FyZC5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcblxyXG4gICAgbGV0IGJvZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgYm9keS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNhcmQtYm9keSB0ZXh0LXdoaXRlXCIpO1xyXG4gICAgY2FyZC5hcHBlbmRDaGlsZChib2R5KTtcclxuXHJcbiAgICBsZXQgYm9keVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImg1XCIpO1xyXG4gICAgYm9keVRpdGxlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiY2FyZC10aXRsZSB0ZXh0LXdoaXRlXCIpO1xyXG4gICAgYm9keVRpdGxlLmlubmVySFRNTCA9IHRoaXMuZGVzY3JpcHRpb247XHJcbiAgICBib2R5LmFwcGVuZENoaWxkKGJvZHlUaXRsZSk7XHJcblxyXG4gICAgbGV0IGJvZHlQID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICBib2R5UC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNhcmQtdGV4dCB0ZXh0LXdoaXRlXCIpO1xyXG4gICAgYm9keVAuaW5uZXJIVE1MID0gdGhpcy5kYXRlO1xyXG4gICAgYm9keS5hcHBlbmRDaGlsZChib2R5UCk7XHJcblxyXG4gICAgYm9keVAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICAgIGJvZHlQLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiY2FyZC10ZXh0IHRleHQtd2hpdGVcIik7XHJcbiAgICBib2R5UC5pbm5lckhUTUwgPSB0aGlzLnByaW9yaXR5O1xyXG4gICAgYm9keS5hcHBlbmRDaGlsZChib2R5UCk7XHJcblxyXG4gICAgcmV0dXJuIGNhcmQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBUb0RvIH07XHJcbiIsImltcG9ydCB7IHByb2plY3RzLCBhZGRCdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi9hZGRCdXR0b25cIjtcclxuaW1wb3J0IHsgVG9EbyB9IGZyb20gXCIuL3RvRG9cIjtcclxuXHJcbmxldCBjdXJyZW50UHJvamVjdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudFByb2plY3RcIik7XHJcbmN1cnJlbnRQcm9qZWN0ID8/PSBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRQcm9qZWN0XCIsIFwiRGVmYXVsdFwiKTtcclxubGV0IGFsbFRvRG9zID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImFsbFRvRG9zQXJyYXlcIikpO1xyXG5hbGxUb0RvcyA/Pz0gW107XHJcblxyXG5sZXQgcHJvamVjdHNBcnJheSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcm9qZWN0c0FycmF5XCIpKTtcclxucHJvamVjdHNBcnJheSA/Pz0gW107XHJcbmxldCBjdXJyZW50QXJyYXkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiRGVmYXVsdFwiKSk7XHJcbmN1cnJlbnRBcnJheSA/Pz0gW107XHJcblxyXG5jb25zdCBwcm9qZWN0TGlzdENvbXBvbmVudCA9ICgpID0+IHtcclxuICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdExpc3RcIik7XHJcbiAgY29uc29sZS5sb2cocHJvamVjdExpc3QpO1xyXG4gIC8vIGNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAvLyBwcm9qZWN0TGlzdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNvbC00XCIpO1xyXG5cclxuICBjb25zdCBkaXZQcm9qZWN0c0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgZGl2UHJvamVjdHNCdXR0b24uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJyb3dcIik7XHJcblxyXG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpO1xyXG4gIHRpdGxlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiY29sLThcIik7XHJcbiAgdGl0bGUuaW5uZXJIVE1MID0gXCJQcm9qZWN0c1wiO1xyXG4gIGRpdlByb2plY3RzQnV0dG9uLmFwcGVuZENoaWxkKHRpdGxlKTtcclxuICBjb25zdCBmb3JtID0gYWRkQnV0dG9uQ29tcG9uZW50KCk7XHJcbiAgZGl2UHJvamVjdHNCdXR0b24uYXBwZW5kQ2hpbGQoZm9ybSk7XHJcblxyXG4gIGNvbnN0IHVMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xyXG5cclxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgcHJvamVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICBsZXQgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XHJcbiAgICBsZXQgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcclxuICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBwcm9qZWN0c1tpbmRleF07XHJcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudFByb2plY3RcIiwgZS50YXJnZXQuaW5uZXJIVE1MKTtcclxuICAgICAgY3VycmVudEFycmF5ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShlLnRhcmdldC5pbm5lckhUTUwpKTtcclxuICAgICAgY29uc29sZS5sb2coY3VycmVudEFycmF5KTtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50QXJyYXlcIiwgSlNPTi5zdHJpbmdpZnkoY3VycmVudEFycmF5KSk7XHJcbiAgICAgIGxldCBsaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b0RvTGlzdFNob3dcIik7XHJcbiAgICAgIGNvbnNvbGUubG9nKGxpc3QpO1xyXG4gICAgICBsaXN0LmlubmVySFRNTCA9IG51bGw7XHJcbiAgICAgIGxldCBjdXJyZW50UHJvamVjdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudFByb2plY3RcIik7XHJcbiAgICAgIGNvbnN0IGFycmF5QXV4ID1cclxuICAgICAgICBjdXJyZW50UHJvamVjdCA9PSBcIkRlZmF1bHRcIlxyXG4gICAgICAgICAgPyBhbGxUb0Rvc1xyXG4gICAgICAgICAgOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudEFycmF5XCIpKTtcclxuICAgICAgY29uc29sZS5sb2coXCJhcnJheSBBdXhpbGlhclwiLCBhcnJheUF1eCk7XHJcbiAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBhcnJheUF1eC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBsZXQgY2FyZCA9IG5ldyBUb0RvKFxyXG4gICAgICAgICAgYXJyYXlBdXhbaW5kZXhdLnRpdGxlLFxyXG4gICAgICAgICAgYXJyYXlBdXhbaW5kZXhdLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgYXJyYXlBdXhbaW5kZXhdLmRhdGUsXHJcbiAgICAgICAgICBhcnJheUF1eFtpbmRleF0ucHJpb3JpdHlcclxuICAgICAgICApO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiY2FyZCxcIiwgY2FyZCk7XHJcbiAgICAgICAgaWYgKGNhcmQudGl0bGUpIHtcclxuICAgICAgICAgIGxldCByZW5kZXJDYXJkID0gY2FyZC5wcmludCgpO1xyXG4gICAgICAgICAgbGlzdC5hcHBlbmRDaGlsZChyZW5kZXJDYXJkKTtcclxuICAgICAgICAgIHRvRG9MaXN0LmFwcGVuZENoaWxkKGxpc3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgbGkuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcclxuICAgIHVMaXN0LmFwcGVuZENoaWxkKGxpKTtcclxuXHJcbiAgICBjdXJyZW50QXJyYXkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGN1cnJlbnRQcm9qZWN0KSk7XHJcbiAgfVxyXG5cclxuICBwcm9qZWN0TGlzdC5hcHBlbmRDaGlsZChkaXZQcm9qZWN0c0J1dHRvbik7XHJcblxyXG4gIHByb2plY3RMaXN0LmFwcGVuZENoaWxkKHVMaXN0KTtcclxuICBjb25zb2xlLmxvZyhcImhlcmVcIiwgZm9ybS5jaGlsZHJlblsxXS5jaGlsZHJlblswXSk7XHJcblxyXG4gIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGZvcm0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMF07XHJcbiAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgcHJvamVjdHMucHVzaChmb3JtLmNoaWxkcmVuWzBdLnZhbHVlKTtcclxuICAgIGxldCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcclxuICAgIGxldCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gICAgYnV0dG9uLmlubmVySFRNTCA9IGZvcm0uY2hpbGRyZW5bMF0udmFsdWU7XHJcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudFByb2plY3RcIiwgZS50YXJnZXQuaW5uZXJIVE1MKTtcclxuICAgICAgbGV0IGl0ZW0gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRQcm9qZWN0XCIpO1xyXG4gICAgICBjdXJyZW50QXJyYXkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGl0ZW0pKTtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50QXJyYXlcIiwgSlNPTi5zdHJpbmdpZnkoY3VycmVudEFycmF5KSk7XHJcbiAgICB9KTtcclxuICAgIGNvbnNvbGUubG9nKGZvcm0uY2hpbGRyZW5bMF0udmFsdWUpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50UHJvamVjdFwiLCBmb3JtLmNoaWxkcmVuWzBdLnZhbHVlKTtcclxuICAgIGxldCBrZXkgPSBmb3JtLmNoaWxkcmVuWzBdLnZhbHVlO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYCR7a2V5fWAsIEpTT04uc3RyaW5naWZ5KFtdKSk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRBcnJheVwiLCBcIltdXCIpO1xyXG4gICAgbGV0IHRvRG9MaXN0U2hvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9Eb0xpc3RTaG93XCIpO1xyXG4gICAgdG9Eb0xpc3RTaG93LmlubmVySFRNTCA9IG51bGw7XHJcbiAgICBsaS5hcHBlbmRDaGlsZChidXR0b24pO1xyXG4gICAgdUxpc3QuYXBwZW5kQ2hpbGQobGkpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0c0FycmF5XCIsIEpTT04uc3RyaW5naWZ5KHByb2plY3RzKSk7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBwcm9qZWN0TGlzdDtcclxufTtcclxuXHJcbmV4cG9ydCB7IHByb2plY3RMaXN0Q29tcG9uZW50IH07XHJcbiIsImltcG9ydCB7IFRvRG8gfSBmcm9tIFwiLi90b0RvXCI7XHJcblxyXG5sZXQgYWxsVG9Eb3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYWxsVG9Eb3NBcnJheVwiKSk7XHJcbmFsbFRvRG9zID8/PSBbXTtcclxuXHJcbmNvbnN0IGZvcm0gPSAoKSA9PiB7XHJcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xyXG4gIGNvbnN0IGlucHV0VGl0bGVOTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRUaXRsZU5MYWJlbCk7XHJcbiAgbGV0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gIGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcInRpdGxlXCIpO1xyXG4gIGxhYmVsLmlubmVySFRNTCA9IFwiVGl0bGU6XCI7XHJcbiAgaW5wdXRUaXRsZU5MYWJlbC5hcHBlbmRDaGlsZChsYWJlbCk7XHJcblxyXG4gIGxldCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwidGl0bGVcIik7XHJcbiAgaW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0aXRsZVwiKTtcclxuICBpbnB1dFRpdGxlTkxhYmVsLmFwcGVuZENoaWxkKGlucHV0KTtcclxuXHJcbiAgY29uc3QgaW5wdXREZXNjcmlwdGlvbk5MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dERlc2NyaXB0aW9uTkxhYmVsKTtcclxuICBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBsYWJlbC5pbm5lckhUTUwgPSBcIkRlc2NyaXB0aW9uOlwiO1xyXG4gIGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcImRlc2NyaXB0aW9uXCIpO1xyXG4gIGlucHV0RGVzY3JpcHRpb25OTGFiZWwuYXBwZW5kQ2hpbGQobGFiZWwpO1xyXG5cclxuICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwidGV4dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiZGVzY3JpcHRpb25cIik7XHJcbiAgaW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkZXNjcmlwdGlvblwiKTtcclxuICBpbnB1dERlc2NyaXB0aW9uTkxhYmVsLmFwcGVuZENoaWxkKGlucHV0KTtcclxuXHJcbiAgY29uc3QgaW5wdXREdWVEYXRlTkxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICBmb3JtLmFwcGVuZENoaWxkKGlucHV0RHVlRGF0ZU5MYWJlbCk7XHJcbiAgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgbGFiZWwuaW5uZXJIVE1MID0gXCJEdWUgRGF0ZTogXCI7XHJcbiAgbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiZHVlRGF0ZVwiKTtcclxuICBpbnB1dER1ZURhdGVOTGFiZWwuYXBwZW5kQ2hpbGQobGFiZWwpO1xyXG5cclxuICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZGF0ZVwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiZHVlRGF0ZVwiKTtcclxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImR1ZURhdGVcIik7XHJcbiAgaW5wdXREdWVEYXRlTkxhYmVsLmFwcGVuZENoaWxkKGlucHV0KTtcclxuXHJcbiAgY29uc3QgaW5wdXRQcmlvcml0eU5MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dFByaW9yaXR5TkxhYmVsKTtcclxuICBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICBsYWJlbC5pbm5lckhUTUwgPSBcIlByaW9yaXR5OlwiO1xyXG4gIGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcInByaW9yaXR5XCIpO1xyXG4gIGlucHV0UHJpb3JpdHlOTGFiZWwuYXBwZW5kQ2hpbGQobGFiZWwpO1xyXG5cclxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgMzsgaW5kZXgrKykge1xyXG4gICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICBsZXQgcHJpb3JpdHk7XHJcbiAgICBzd2l0Y2ggKGluZGV4KSB7XHJcbiAgICAgIGNhc2UgMDpcclxuICAgICAgICBwcmlvcml0eSA9IFwibG93XCI7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlIDE6XHJcbiAgICAgICAgcHJpb3JpdHkgPSBcIm1lZGl1bVwiO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDI6XHJcbiAgICAgICAgcHJpb3JpdHkgPSBcInVyZ2VudFwiO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuXHJcbiAgICBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgIGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBwcmlvcml0eSk7XHJcbiAgICBsYWJlbC5pbm5lckhUTUwgPSBwcmlvcml0eTtcclxuICAgIGlucHV0UHJpb3JpdHlOTGFiZWwuYXBwZW5kQ2hpbGQobGFiZWwpO1xyXG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInJhZGlvXCIpO1xyXG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBwcmlvcml0eSk7XHJcbiAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBwcmlvcml0eSk7XHJcbiAgICBpbnB1dFByaW9yaXR5TkxhYmVsLmFwcGVuZENoaWxkKGlucHV0KTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHN1bWJpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICBmb3JtLmFwcGVuZENoaWxkKHN1bWJpdEJ1dHRvbik7XHJcbiAgc3VtYml0QnV0dG9uLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJzdWJtaXRcIik7XHJcbiAgc3VtYml0QnV0dG9uLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3VibWl0QnV0dG9uXCIpO1xyXG4gIHJldHVybiBmb3JtO1xyXG59O1xyXG5cclxuY29uc3QgdG9Eb0NvbGxlY3Rpb24gPSAoKSA9PiB7XHJcbiAgY29uc3QgdG9Eb0xpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvRG9MaXN0XCIpO1xyXG4gIC8vIGNvbnN0IHRvRG9MaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAvLyB0b0RvTGlzdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNvbC04XCIpO1xyXG4gIC8vIHRvRG9MaXN0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwidG9Eb0xpc3RcIik7XHJcblxyXG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xyXG4gIHRpdGxlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwidGV4dC1jZW50ZXJcIik7XHJcbiAgdGl0bGUuaW5uZXJIVE1MID0gXCJMaXN0IG9mIFRvRG9cIjtcclxuXHJcbiAgdG9Eb0xpc3QuYXBwZW5kQ2hpbGQodGl0bGUpO1xyXG5cclxuICBjb25zdCB0b0RvTGlzdEJsb2NrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICB0b0RvTGlzdEJsb2NrLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwidG9Eb0xpc3RCbG9ja1wiKTtcclxuXHJcbiAgdG9Eb0xpc3RCbG9jay5hcHBlbmRDaGlsZChmb3JtKCkpO1xyXG4gIHRvRG9MaXN0LmFwcGVuZENoaWxkKHRvRG9MaXN0QmxvY2spO1xyXG5cclxuICBjb25zdCB0b0RvTGlzdFNob3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIHRvRG9MaXN0U2hvdy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInRvRG9MaXN0U2hvd1wiKTtcclxuICB0b0RvTGlzdC5hcHBlbmRDaGlsZCh0b0RvTGlzdFNob3cpO1xyXG4gIGxldCBjdXJyZW50UHJvamVjdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VycmVudFByb2plY3RcIik7XHJcbiAgY29uc3QgYXJyYXlBdXggPVxyXG4gICAgY3VycmVudFByb2plY3QgPT0gXCJEZWZhdWx0XCJcclxuICAgICAgPyBhbGxUb0Rvc1xyXG4gICAgICA6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oY3VycmVudFByb2plY3QpKTtcclxuICBjb25zb2xlLmxvZyhcImFycmF5IEF1eGlsaWFyXCIsIGFycmF5QXV4KTtcclxuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgYXJyYXlBdXgubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3IFRvRG8oXHJcbiAgICAgIGFycmF5QXV4W2luZGV4XS50aXRsZSxcclxuICAgICAgYXJyYXlBdXhbaW5kZXhdLmRlc2NyaXB0aW9uLFxyXG4gICAgICBhcnJheUF1eFtpbmRleF0uZGF0ZSxcclxuICAgICAgYXJyYXlBdXhbaW5kZXhdLnByaW9yaXR5XHJcbiAgICApO1xyXG4gICAgaWYgKGNhcmQudGl0bGUpIHtcclxuICAgICAgbGV0IHJlbmRlckNhcmQgPSBjYXJkLnByaW50KCk7XHJcbiAgICAgIHRvRG9MaXN0U2hvdy5hcHBlbmRDaGlsZChyZW5kZXJDYXJkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJldHVybiB0b0RvTGlzdDtcclxufTtcclxuXHJcbmV4cG9ydCB7IHRvRG9Db2xsZWN0aW9uLCBhbGxUb0RvcyB9O1xyXG4iLCJpbXBvcnQgeyBwcm9qZWN0TGlzdENvbXBvbmVudCB9IGZyb20gXCIuL3Byb2plY3RzXCI7XHJcbmltcG9ydCB7IHRvRG9Db2xsZWN0aW9uLCBhbGxUb0RvcyB9IGZyb20gXCIuL3RvRG9Db2xsZWN0aW9uXCI7XHJcbmltcG9ydCB7IFRvRG8gfSBmcm9tIFwiLi90b0RvXCI7XHJcblxyXG5sZXQgY3VycmVudFByb2plY3QgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRQcm9qZWN0XCIpO1xyXG5jdXJyZW50UHJvamVjdCA/Pz0gbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50UHJvamVjdFwiLCBcIkRlZmF1bHRcIik7XHJcbmxldCBkZWZQcm9qZWN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIkRlZmF1bHRcIikpO1xyXG5pZiAoZGVmUHJvamVjdCA9PSBudWxsKSB7XHJcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJEZWZhdWx0XCIsIFwiW11cIik7XHJcbn1cclxuXHJcbmxldCBjdXJyZW50QXJyYXkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiRGVmYXVsdFwiKSk7XHJcbmN1cnJlbnRBcnJheSA/Pz0gW107XHJcbmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudEFycmF5XCIsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRBcnJheSkpO1xyXG5cclxuY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcclxuXHJcbmNvbnN0IHB0TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbmNvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5wdExpc3Quc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJjb2wtNFwiKTtcclxucHRMaXN0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwicHJvamVjdExpc3RcIik7XHJcbmNvbnRlbnQuYXBwZW5kQ2hpbGQocHRMaXN0KTtcclxuY29uc29sZS5sb2cocHRMaXN0KTtcclxuXHJcbmNvbnN0IHRvTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbnRvTGlzdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImNvbC04XCIpO1xyXG50b0xpc3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0b0RvTGlzdFwiKTtcclxuY29udGVudC5hcHBlbmRDaGlsZCh0b0xpc3QpO1xyXG5cclxubGV0IHByb2plY3RMaXN0ID0gcHJvamVjdExpc3RDb21wb25lbnQoKTtcclxuXHJcbmNvbnRlbnQuYXBwZW5kQ2hpbGQocHJvamVjdExpc3QpO1xyXG5cclxuY29uc3QgdG9Eb0xpc3QgPSB0b0RvQ29sbGVjdGlvbigpO1xyXG5jb250ZW50LmFwcGVuZENoaWxkKHRvRG9MaXN0KTtcclxuXHJcbmNvbnN0IGdldFRpdGxlID0gKCkgPT4ge1xyXG4gIGxldCB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIik7XHJcbiAgcmV0dXJuIHRpdGxlLnZhbHVlO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0RGVzY3JpcHRpb24gPSAoKSA9PiB7XHJcbiAgbGV0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKTtcclxuICByZXR1cm4gZGVzY3JpcHRpb24udmFsdWU7XHJcbn07XHJcblxyXG5jb25zdCBnZXREYXRlID0gKCkgPT4ge1xyXG4gIGxldCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkdWVEYXRlXCIpO1xyXG4gIHJldHVybiBkYXRlLnZhbHVlO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0UHJpb3JpdHkgPSAoKSA9PiB7XHJcbiAgbGV0IHByaW9yaXR5TG93ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb3dcIik7XHJcbiAgbGV0IHByaW9yaXR5TWVkaXVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZWRpdW1cIik7XHJcbiAgbGV0IHByaW9yaXR5VXJnZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1cmdlbnRcIik7XHJcbiAgbGV0IHByaW9yaXR5ID0gbnVsbDtcclxuICBpZiAocHJpb3JpdHlMb3cuY2hlY2tlZCkge1xyXG4gICAgcHJpb3JpdHkgPSBwcmlvcml0eUxvdy5uYW1lO1xyXG4gIH0gZWxzZSBpZiAocHJpb3JpdHlNZWRpdW0uY2hlY2tlZCkge1xyXG4gICAgcHJpb3JpdHkgPSBwcmlvcml0eU1lZGl1bS5uYW1lO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBwcmlvcml0eSA9IHByaW9yaXR5VXJnZW50Lm5hbWU7XHJcbiAgfVxyXG4gIHJldHVybiBwcmlvcml0eTtcclxufTtcclxuXHJcbmNvbnN0IG9uU3VibWl0Rm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3VibWl0QnV0dG9uXCIpO1xyXG5vblN1Ym1pdEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGxldCB0aXRsZSA9IGdldFRpdGxlKCk7XHJcbiAgbGV0IGRlc2MgPSBnZXREZXNjcmlwdGlvbigpO1xyXG4gIGxldCBkYXRlID0gZ2V0RGF0ZSgpO1xyXG4gIGxldCBwcmlvciA9IGdldFByaW9yaXR5KCk7XHJcblxyXG4gIGxldCB0b0RvID0gbmV3IFRvRG8odGl0bGUsIGRlc2MsIGRhdGUsIHByaW9yKTtcclxuICB0b0RvTGlzdFNob3cuYXBwZW5kQ2hpbGQodG9Eby5wcmludCgpKTtcclxuICBhbGxUb0Rvcy5wdXNoKHRvRG8pO1xyXG4gIGN1cnJlbnRBcnJheSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50QXJyYXlcIikpO1xyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiRGVmYXVsdFwiLCBKU09OLnN0cmluZ2lmeShhbGxUb0RvcykpO1xyXG4gIGN1cnJlbnRBcnJheS5wdXNoKHRvRG8pO1xyXG4gIGN1cnJlbnRQcm9qZWN0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJjdXJyZW50UHJvamVjdFwiKTtcclxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRBcnJheVwiLCBKU09OLnN0cmluZ2lmeShjdXJyZW50QXJyYXkpKTtcclxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgJHtjdXJyZW50UHJvamVjdH1gLCBKU09OLnN0cmluZ2lmeShjdXJyZW50QXJyYXkpKTtcclxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFsbFRvRG9zQXJyYXlcIiwgSlNPTi5zdHJpbmdpZnkoYWxsVG9Eb3MpKTtcclxuICB0b0RvTGlzdC5hcHBlbmRDaGlsZCh0b0RvTGlzdFNob3cpO1xyXG59KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==