(()=>{"use strict";const e=window.localStorage;let t=JSON.parse(e.getItem("projectsArray"));t=t||["Default"];class r{constructor(e,t,r,n){this.title=e,this.description=t,this.date=r,this.priority=n}print(){let e=document.createElement("div"),t=null;t="low"==this.priority?"primary":"medium"==this.priority?"warning":"danger",e.setAttribute("class",`card text-white bg-${t}`);let r=document.createElement("div");r.setAttribute("class","card-header text-white"),r.innerHTML=this.title,e.appendChild(r);let n=document.createElement("div");n.setAttribute("class","card-body text-white"),e.appendChild(n);let l=document.createElement("h5");l.setAttribute("class","card-title text-white"),l.innerHTML=this.description,n.appendChild(l);let i=document.createElement("p");i.setAttribute("class","card-text text-white"),i.innerHTML=this.date,n.appendChild(i),i=document.createElement("p"),i.setAttribute("class","card-text text-white"),i.innerHTML=this.priority,n.appendChild(i);const a=document.createElement("div");a.setAttribute("class","row container"),e.appendChild(a);const c=document.createElement("button");return c.setAttribute("id","deleteButton"),c.setAttribute("class","col-2"),c.innerHTML="Delete",a.appendChild(c),e}}let n=localStorage.getItem("currentProject");n??=localStorage.setItem("currentProject","Default");let l=JSON.parse(localStorage.getItem("allToDosArray"));l??=[];let i=JSON.parse(localStorage.getItem("projectsArray"));i??=[];let a=JSON.parse(localStorage.getItem("Default"));a??=[];let c=JSON.parse(localStorage.getItem("allToDosArray"));c??=[];let o=localStorage.getItem("currentProject");o??=localStorage.setItem("currentProject","Default"),null==JSON.parse(localStorage.getItem("Default"))&&localStorage.setItem("Default","[]");let d=JSON.parse(localStorage.getItem("Default"));d??=[],localStorage.setItem("currentArray",JSON.stringify(d));const s=document.getElementById("content"),u=document.createElement("div");u.setAttribute("class","col-4"),u.setAttribute("id","projectList"),s.appendChild(u);const m=document.createElement("div");m.setAttribute("class","col-8"),m.setAttribute("id","toDoList"),s.appendChild(m);let p=(()=>{const e=document.getElementById("projectList"),i=document.createElement("div");i.setAttribute("class","row");const c=document.createElement("h1");c.setAttribute("class","col-8"),c.innerHTML="Projects",i.appendChild(c);const o=(()=>{const e=document.createElement("form");e.setAttribute("id","idForm");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("placeholder","Project name"),t.setAttribute("id","nameField"),e.appendChild(t);const r=document.createElement("span");r.setAttribute("class","col-4");const n=document.createElement("button");return n.setAttribute("type","submit"),n.setAttribute("id","buttonSubmit"),n.innerHTML="Add project",r.appendChild(n),e.appendChild(r),e})();i.appendChild(o);const d=document.createElement("ul");for(let e=0;e<t.length;e++){let i=document.createElement("li"),c=document.createElement("button");c.innerHTML=t[e],c.addEventListener("click",(e=>{localStorage.setItem("currentProject",e.target.innerHTML),a=JSON.parse(localStorage.getItem(e.target.innerHTML)),localStorage.setItem("currentArray",JSON.stringify(a));let t=document.getElementById("toDoListShow");t.innerHTML=null;const n="Default"==localStorage.getItem("currentProject")?l:JSON.parse(localStorage.getItem("currentArray"));for(let e=0;e<n.length;e++){let l=new r(n[e].title,n[e].description,n[e].date,n[e].priority);if(l.title){let e=l.print();t.appendChild(e),toDoList.appendChild(t)}}})),i.appendChild(c),d.appendChild(i),a=JSON.parse(localStorage.getItem(n))}return e.appendChild(i),e.appendChild(d),o.children[1].children[0].addEventListener("click",(e=>{t.push(o.children[0].value);let r=document.createElement("li"),n=document.createElement("button");n.innerHTML=o.children[0].value,n.addEventListener("click",(e=>{localStorage.setItem("currentProject",e.target.innerHTML);let t=localStorage.getItem("currentProject");a=JSON.parse(localStorage.getItem(t)),localStorage.setItem("currentArray",JSON.stringify(a))})),localStorage.setItem("currentProject",o.children[0].value);let l=o.children[0].value;localStorage.setItem(`${l}`,JSON.stringify([])),localStorage.setItem("currentArray","[]"),document.getElementById("toDoListShow").innerHTML=null,r.appendChild(n),d.appendChild(r),localStorage.setItem("projectsArray",JSON.stringify(t))})),e})();s.appendChild(p);const g=(()=>{const e=document.getElementById("toDoList"),t=document.createElement("h2");t.setAttribute("class","text-center"),t.innerHTML="List of ToDo",e.appendChild(t);const n=document.createElement("div");n.setAttribute("class","toDoListBlock"),n.appendChild((()=>{const e=document.createElement("form"),t=document.createElement("div");e.appendChild(t);let r=document.createElement("label");r.setAttribute("for","title"),r.innerHTML="Title:",t.appendChild(r);let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","title"),n.setAttribute("id","title"),t.appendChild(n);const l=document.createElement("div");e.appendChild(l),r=document.createElement("label"),r.innerHTML="Description:",r.setAttribute("for","description"),l.appendChild(r),n=document.createElement("input"),n.setAttribute("type","text"),n.setAttribute("name","description"),n.setAttribute("id","description"),l.appendChild(n);const i=document.createElement("div");e.appendChild(i),r=document.createElement("label"),r.innerHTML="Due Date: ",r.setAttribute("for","dueDate"),i.appendChild(r),n=document.createElement("input"),n.setAttribute("type","date"),n.setAttribute("name","dueDate"),n.setAttribute("id","dueDate"),i.appendChild(n);const a=document.createElement("div");e.appendChild(a),r=document.createElement("label"),r.innerHTML="Priority:",r.setAttribute("for","priority"),a.appendChild(r);for(let e=0;e<3;e++){let t;switch(n=document.createElement("input"),e){case 0:t="low";break;case 1:t="medium";break;case 2:t="urgent"}r=document.createElement("label"),r.setAttribute("for",t),r.innerHTML=t,a.appendChild(r),n.setAttribute("type","radio"),n.setAttribute("name",t),n.setAttribute("id",t),a.appendChild(n)}const c=document.createElement("input");return e.appendChild(c),c.setAttribute("type","submit"),c.setAttribute("id","submitButton"),e})()),e.appendChild(n);const l=document.createElement("div");l.setAttribute("id","toDoListShow"),e.appendChild(l);let i=localStorage.getItem("currentProject");const a="Default"==i?c:JSON.parse(localStorage.getItem(i));for(let e=0;e<a.length;e++){const t=new r(a[e].title,a[e].description,a[e].date,a[e].priority);if(t.title){let e=t.print();l.appendChild(e)}}return e})();s.appendChild(g),document.getElementById("submitButton").addEventListener("click",(e=>{e.preventDefault();let t=document.getElementById("title").value,n=document.getElementById("description").value,l=document.getElementById("dueDate").value,i=(()=>{let e=document.getElementById("low"),t=document.getElementById("medium"),r=document.getElementById("urgent"),n=null;return n=e.checked?e.name:t.checked?t.name:r.name,n})(),a=new r(t,n,l,i);toDoListShow.appendChild(a.print()),c.push(a),d=JSON.parse(localStorage.getItem("currentArray")),localStorage.setItem("Default",JSON.stringify(c)),d.push(a),o=localStorage.getItem("currentProject"),localStorage.setItem("currentArray",JSON.stringify(d)),localStorage.setItem(`${o}`,JSON.stringify(d)),localStorage.setItem("allToDosArray",JSON.stringify(c)),g.appendChild(toDoListShow)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,